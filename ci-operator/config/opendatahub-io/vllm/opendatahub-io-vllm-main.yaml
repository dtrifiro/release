build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
images:
- build_args:
  - name: max_jobs
    value: "8"
  - name: nvcc_threads
    value: "2"
  - name: TORCH_CUDA_ARCH_LIST
    value: 7.5 8.0
  - name: PYTHON_VERSION
    value: "3.11"
  context_dir: .
  dockerfile_path: Dockerfile.ubi
  to: vllm-build-main-cuda
- dockerfile_literal: |
    FROM vllm-build-main-cuda

    ENV VIRTUAL_ENV=/opt/vllm
    ENV PATH=$VIRTUAL_ENV/bin/:$PATH

    USER root
    COPY requirements-dev.txt requirements-dev.txt
    COPY requirements-lint.txt requirements-lint.txt
    COPY requirements-test.txt requirements-test.txt
    RUN pip install --no-cache-dir -r requirements-dev.txt
  from: vllm-build-main-cuda
  to: vllm-test
promotion:
  to:
  - namespace: opendatahub-io
    tag: latest
releases:
  latest:
    release:
      architecture: amd64
      channel: fast
      version: "4.12"
resources:
  '*':
    requests:
      cpu: 200m
      memory: 200Mi
  smoke-test:
    limits:
      cpu: "4"
      memory: 24Gi
      nvidia.com/gpu: "1"
    requests:
      cpu: "4"
      memory: 8Gi
      nvidia.com/gpu: "1"
  unit-test:
    limits:
      cpu: "4"
      memory: 24Gi
      nvidia.com/gpu: "1"
    requests:
      cpu: "4"
      memory: 8Gi
      nvidia.com/gpu: "1"
  vllm-build-main-cuda:
    limits:
      cpu: "16"
      memory: 24Gi
    requests:
      cpu: "16"
      memory: 24Gi
tests:
- always_run: true
  as: unit-test
  cluster: build05
  commands: |
    export VIRTUAL_ENV=/opt/vllm
    export PATH=$VIRTUAL_ENV/bin/:$PATH

    echo "python=$(which python)"
    echo "pytest=$(which pytest)"
    echo "pwd=$(pwd)"
    ls -l

    cd tests
    echo "========================================"

    echo "pwd=$(pwd)"
    ls -l

    unset HF_HUB_OFFLINE

    echo "========================================"
    pip list | grep vllm

    echo "========================================"
    # try listing the venv vllm package .so s
    ls -l /opt/vllm/lib/python3.11/site-packages/vllm/*so

    echo "========================================"
    # try importing vllm
    python -c 'import vllm; print(vllm)'

    echo "========================================"
    # basic correctness
    pytest -v -s test_regression.py
    #pytest -v -s async_engine

    #bash extras/unit-tests.sh

    # finally check if the smoke test works

    cd ../extras

    bash smoke-test.sh
  container:
    clone: true
    from: vllm-test
- always_run: true
  as: smoke-test
  cluster: build05
  commands: |
    export VIRTUAL_ENV=/opt/vllm
    export PATH=$VIRTUAL_ENV/bin/:$PATH

    cd extras

    bash smoke-test.sh
  container:
    clone: true
    from: vllm-build-main-cuda
- as: pr-image-mirror
  steps:
    dependencies:
      SOURCE_IMAGE_REF: vllm-build-main-cuda
    env:
      IMAGE_REPO: vllm
    workflow: opendatahub-io-ci-image-mirror
- as: fast-image-mirror
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: vllm-build-main-cuda
    env:
      IMAGE_REPO: vllm
      RELEASE_VERSION: fast
    workflow: opendatahub-io-ci-image-mirror
- as: nightly-image-mirror
  cron: 0 0 * * *
  steps:
    dependencies:
      SOURCE_IMAGE_REF: vllm-build-main-cuda
    env:
      IMAGE_REPO: vllm
      RELEASE_VERSION: fast
    workflow: opendatahub-io-ci-image-mirror
zz_generated_metadata:
  branch: main
  org: opendatahub-io
  repo: vllm
